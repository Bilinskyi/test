/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.wrapp-icon:hover .icon-fb {
  background-image: url(../img/sprite.png);
  background-position: 0px -52px;
  width: 15px;
  height: 24px;
}
.icon-fb {
  background-image: url(../img/sprite.png);
  background-position: -15px -52px;
  width: 15px;
  height: 24px;
}
.wrapp-icon:hover .icon-gg {
  background-image: url(../img/sprite.png);
  background-position: 0px 0px;
  width: 26px;
  height: 26px;
}
.icon-gg {
  background-image: url(../img/sprite.png);
  background-position: -26px 0px;
  width: 26px;
  height: 26px;
}
.wrapp-icon:hover .icon-tw {
  background-image: url(../img/sprite.png);
  background-position: -52px 0px;
  width: 26px;
  height: 21px;
}
.icon-tw {
  background-image: url(../img/sprite.png);
  background-position: -52px -21px;
  width: 26px;
  height: 21px;
}
.wrapp-icon:hover .icon-yb {
  background-image: url(../img/sprite.png);
  background-position: 0px -26px;
  width: 22px;
  height: 26px;
}
.icon-yb {
  background-image: url(../img/sprite.png);
  background-position: -22px -26px;
  width: 22px;
  height: 26px;
}
